<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo Sibony</title>
    <link>https://hugosibony.com/</link>
    <description>Recent content on Hugo Sibony</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hugosibony.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Alias Manager Project</title>
      <link>https://hugosibony.com/portfolio/project/alias_manager/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hugosibony.com/portfolio/project/alias_manager/</guid>
      <description>Alias Manager Project Why this project I wanted to learn Rust and I needed a simple project to start with. I also reset my computer and changes OS from time to time, so I wanted to have a simple way to manage my aliases. Thus I created this project.
Features Add new aliases with custom commands List existing aliases Remove aliases by name Requirements Rust programming language (https://www.rust-lang.org/) Cargo package manager (usually bundled with Rust) Installation Clone this repository to your local machine: git clone https://github.</description>
    </item>
    
    <item>
      <title>How to properly mount Google Drive with RClone</title>
      <link>https://hugosibony.com/blog/memos/rclone/</link>
      <pubDate>Sun, 01 Jan 2023 19:49:32 -0500</pubDate>
      
      <guid>https://hugosibony.com/blog/memos/rclone/</guid>
      <description>Install RClone Before we start, you need to install RClone on your computer.
For arch, run
sudo pacman -S rclone Set up Google Drive Remote We need to link RClone with your Google account. Run the following command to start the configuration:
rclone config Press n to create a new remote.
Enter name for new remote. name&amp;gt; TEST Option Storage. Type of storage to configure. Choose a number from below, or type in your own value.</description>
    </item>
    
    <item>
      <title>Access Control And Isolation</title>
      <link>https://hugosibony.com/blog/eecs388notes/accesscontrolandisolation/</link>
      <pubDate>Thu, 03 Nov 2022 12:13:38 -0400</pubDate>
      
      <guid>https://hugosibony.com/blog/eecs388notes/accesscontrolandisolation/</guid>
      <description>Access Control We aim for: Principle of Least Privilege.
Limit the damage of an accident Reduce interaction to the minimum operator Minimized the number of the program audited. ( e.g: My office key can only open my office door. )
( e.g: Classified information of &amp;ldquo;need-to-know&amp;rdquo; )
Models and Policies Security Model
Subject (Who); Apps, Users, Web Origins Objects (What): Files, Processes, Devices, DB Tables, Cookies Operations: Read, Write, Call This security model defines an Access Control Matrix.</description>
    </item>
    
    <item>
      <title>Control Hijacking</title>
      <link>https://hugosibony.com/blog/eecs388notes/controlhijacking/</link>
      <pubDate>Tue, 01 Nov 2022 00:09:30 -0400</pubDate>
      
      <guid>https://hugosibony.com/blog/eecs388notes/controlhijacking/</guid>
      <description>Basic Knowledge Registers General Purpose Registers EAX: Used to store return values EBX ECX EDX ESI Special Purpose Registers EIP: Instruction Pointer ESP: Stack Pointer, indicate the top of the function EBP: Frame / Base Pointer, indicate the bottom of the function CPU Instructions (Intel Syntax) Move a value to a register: mov eax, 0x34 Add a value to a register: add eax 10 Jump to a line of code: jmp 0x123 Call a function (returns to the next line): call 0x1234 Stack push 0x0a push 0x6c push 0xff pop eax pop eax push 0x88 overwrite the original value Note that the pop does not eliminate the value of the stack.</description>
    </item>
    
    <item>
      <title>KubeCon Day2</title>
      <link>https://hugosibony.com/blog/kubecon2022/day2/</link>
      <pubDate>Thu, 27 Oct 2022 00:09:31 -0400</pubDate>
      
      <guid>https://hugosibony.com/blog/kubecon2022/day2/</guid>
      <description>This is my second day of the KubeCon Event. I love KubeCon. The opening keynote of KubeCon | CloudNativeCon
KubeCon supports Ukrain
Definitely Something I will need: Kubernetes tutorial
Border between US and Canada
Best activity today: Solution Showcase. A varierty of product from dozens of companies
This is a lovely microK8s cluster built with 4 Raspberry Pi and a switch
The impact of Prometheus. We should use Prometheus to get data in order to utilize our resources as much as possible</description>
    </item>
    
    <item>
      <title>KubeCon Day 1</title>
      <link>https://hugosibony.com/blog/kubecon2022/day1/</link>
      <pubDate>Wed, 26 Oct 2022 00:00:08 -0400</pubDate>
      
      <guid>https://hugosibony.com/blog/kubecon2022/day1/</guid>
      <description>This is the first time I have ever paid a visit to a formal academic conference
My Badge of KubeCon
Conference about In-Time data analysis
A nice fuzz generator that can generate random test cases to make your program robust
A high schooler sharing his ideas about open-source development
Gavin said that it reminded him of his high school age.
An online encyclopedia for Cloud Native terminology
I think I will try it.</description>
    </item>
    
    <item>
      <title>Message Integrity</title>
      <link>https://hugosibony.com/blog/eecs388notes/integrity/</link>
      <pubDate>Sat, 22 Oct 2022 14:15:02 -0400</pubDate>
      
      <guid>https://hugosibony.com/blog/eecs388notes/integrity/</guid>
      <description>Threat Model Alice computes v=f(m), where v is a verifier of the message m. Alice sends the message to Bob via Mallory. Bob verifies that v&#39;=f(m&#39;). Random Function (RF) Set up a random map f: {Fixed size input}-&amp;gt;{Fixed size output}. This function is only known by Alice and Bob, but unknown to Mallory.
Provably secure: Mallory cannot find out the verifier of a message that he has never seen (he cannot do it better than guessing).</description>
    </item>
    
  </channel>
</rss>
